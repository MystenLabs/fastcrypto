(function() {var type_impls = {
"fastcrypto_vdf":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FastVerifier%3CG,+F,+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fastcrypto_vdf/vdf/wesolowski.rs.html#105-139\">source</a><a href=\"#impl-FastVerifier%3CG,+F,+M%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;G: <a class=\"trait\" href=\"fastcrypto_vdf/trait.ParameterizedGroupElement.html\" title=\"trait fastcrypto_vdf::ParameterizedGroupElement\">ParameterizedGroupElement</a>&lt;ScalarType = <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt; + <a class=\"trait\" href=\"fastcrypto_vdf/trait.UnknownOrderGroupElement.html\" title=\"trait fastcrypto_vdf::UnknownOrderGroupElement\">UnknownOrderGroupElement</a>, F: <a class=\"trait\" href=\"fastcrypto_vdf/vdf/wesolowski/trait.FiatShamir.html\" title=\"trait fastcrypto_vdf::vdf::wesolowski::FiatShamir\">FiatShamir</a>&lt;G&gt;, M: ScalarMultiplier&lt;G, <a class=\"struct\" href=\"https://docs.rs/num-bigint/0.4/num_bigint/bigint/struct.BigInt.html\" title=\"struct num_bigint::bigint::BigInt\">BigInt</a>&gt;&gt; <a class=\"struct\" href=\"fastcrypto_vdf/vdf/wesolowski/struct.FastVerifier.html\" title=\"struct fastcrypto_vdf::vdf::wesolowski::FastVerifier\">FastVerifier</a>&lt;G, F, M&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/fastcrypto_vdf/vdf/wesolowski.rs.html#112-119\">source</a><h4 class=\"code-header\">pub fn <a href=\"fastcrypto_vdf/vdf/wesolowski/struct.FastVerifier.html#tymethod.new\" class=\"fn\">new</a>(vdf: <a class=\"struct\" href=\"fastcrypto_vdf/vdf/wesolowski/struct.WesolowskisVDF.html\" title=\"struct fastcrypto_vdf::vdf::wesolowski::WesolowskisVDF\">WesolowskisVDF</a>&lt;G, F&gt;, input: G) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a new FastVerifier for the given VDF instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify\" class=\"method\"><a class=\"src rightside\" href=\"src/fastcrypto_vdf/vdf/wesolowski.rs.html#122-138\">source</a><h4 class=\"code-header\">pub fn <a href=\"fastcrypto_vdf/vdf/wesolowski/struct.FastVerifier.html#tymethod.verify\" class=\"fn\">verify</a>(&amp;self, output: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;G</a>, proof: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;G</a>) -&gt; FastCryptoResult&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Verify the output and proof from a VDF using the input given in [new].</p>\n</div></details></div></details>",0,"fastcrypto_vdf::vdf::wesolowski::StrongVDFVerifier","fastcrypto_vdf::vdf::wesolowski::WeakVDFVerifier"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()