(function() {
    var type_impls = Object.fromEntries([["fastcrypto_tbls",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26ProjectivePoint%3E-for-ProjectivePoint\" class=\"impl\"><a href=\"#impl-Add%3C%26ProjectivePoint%3E-for-ProjectivePoint\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;ProjectivePoint&gt; for ProjectivePoint</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = ProjectivePoint</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(\n    self,\n    rhs: &amp;ProjectivePoint,\n) -&gt; &lt;ProjectivePoint as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;ProjectivePoint&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&ProjectivePoint>","fastcrypto_tbls::threshold_schnorr::G"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-ProjectivePoint\" class=\"impl\"><a href=\"#impl-Add-for-ProjectivePoint\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for ProjectivePoint</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = ProjectivePoint</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: ProjectivePoint) -&gt; ProjectivePoint</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","fastcrypto_tbls::threshold_schnorr::G"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3C%26ProjectivePoint%3E-for-ProjectivePoint\" class=\"impl\"><a href=\"#impl-AddAssign%3C%26ProjectivePoint%3E-for-ProjectivePoint\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;&amp;ProjectivePoint&gt; for ProjectivePoint</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: &amp;ProjectivePoint)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<&ProjectivePoint>","fastcrypto_tbls::threshold_schnorr::G"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-ProjectivePoint\" class=\"impl\"><a href=\"#impl-AddAssign-for-ProjectivePoint\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for ProjectivePoint</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: ProjectivePoint)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","fastcrypto_tbls::threshold_schnorr::G"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-ProjectivePoint\" class=\"impl\"><a href=\"#impl-Clone-for-ProjectivePoint\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for ProjectivePoint</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; ProjectivePoint</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","fastcrypto_tbls::threshold_schnorr::G"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-ProjectivePoint\" class=\"impl\"><a href=\"#impl-Debug-for-ProjectivePoint\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for ProjectivePoint</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","fastcrypto_tbls::threshold_schnorr::G"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-ProjectivePoint\" class=\"impl\"><a href=\"#impl-Default-for-ProjectivePoint\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for ProjectivePoint</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; ProjectivePoint</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","fastcrypto_tbls::threshold_schnorr::G"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-ProjectivePoint\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-ProjectivePoint\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.223/serde_core/de/trait.Deserialize.html\" title=\"trait serde_core::de::Deserialize\">Deserialize</a>&lt;'de&gt; for ProjectivePoint</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde_core/1.0.223/serde_core/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;ProjectivePoint, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.223/serde_core/de/trait.Deserializer.html\" title=\"trait serde_core::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde_core/1.0.223/serde_core/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde_core::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.223/serde_core/de/trait.Deserializer.html\" title=\"trait serde_core::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde_core/1.0.223/serde_core/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","fastcrypto_tbls::threshold_schnorr::G"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CScalar%3E-for-ProjectivePoint\" class=\"impl\"><a href=\"#impl-Div%3CScalar%3E-for-ProjectivePoint\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;Scalar&gt; for ProjectivePoint</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;ProjectivePoint, FastCryptoError&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: Scalar) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;ProjectivePoint, FastCryptoError&gt;</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Scalar>","fastcrypto_tbls::threshold_schnorr::G"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Doubling-for-ProjectivePoint\" class=\"impl\"><a href=\"#impl-Doubling-for-ProjectivePoint\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Doubling for ProjectivePoint</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.double\" class=\"method trait-impl\"><a href=\"#method.double\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">double</a>(self) -&gt; ProjectivePoint</h4></section></summary><div class='docblock'>Compute 2 * Self = Self + Self.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.repeated_doubling\" class=\"method trait-impl\"><a href=\"#method.repeated_doubling\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">repeated_doubling</a>(self, repetitions: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; Self</h4></section></summary><div class='docblock'>Compute input * 2^repetitions by repeated doubling.</div></details></div></details>","Doubling","fastcrypto_tbls::threshold_schnorr::G"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CProjective%3CConfig%3E%3E-for-ProjectivePoint\" class=\"impl\"><a href=\"#impl-From%3CProjective%3CConfig%3E%3E-for-ProjectivePoint\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Projective&lt;Config&gt;&gt; for ProjectivePoint</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(original: Projective&lt;Config&gt;) -&gt; ProjectivePoint</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Projective<Config>>","fastcrypto_tbls::threshold_schnorr::G"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GroupElement-for-ProjectivePoint\" class=\"impl\"><a href=\"#impl-GroupElement-for-ProjectivePoint\" class=\"anchor\">§</a><h3 class=\"code-header\">impl GroupElement for ProjectivePoint</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ScalarType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ScalarType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ScalarType</a> = Scalar</h4></section></summary><div class='docblock'>Type of scalars used in the [Self::mul] multiplication method.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zero</a>() -&gt; ProjectivePoint</h4></section></summary><div class='docblock'>Return an instance of the identity element in this group.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.generator\" class=\"method trait-impl\"><a href=\"#method.generator\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">generator</a>() -&gt; ProjectivePoint</h4></section></summary><div class='docblock'>Return an instance of the generator for this group.</div></details><section id=\"method.sum\" class=\"method trait-impl\"><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sum</a>(terms: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = Self&gt;) -&gt; Self</h4></section></div></details>","GroupElement","fastcrypto_tbls::threshold_schnorr::G"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26%3CProjectivePoint+as+GroupElement%3E::ScalarType%3E-for-ProjectivePoint\" class=\"impl\"><a href=\"#impl-Mul%3C%26%3CProjectivePoint+as+GroupElement%3E::ScalarType%3E-for-ProjectivePoint\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;&lt;ProjectivePoint as GroupElement&gt;::ScalarType&gt; for ProjectivePoint</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = ProjectivePoint</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    rhs: &amp;&lt;ProjectivePoint as GroupElement&gt;::ScalarType,\n) -&gt; &lt;ProjectivePoint as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;&lt;ProjectivePoint as GroupElement&gt;::ScalarType&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&<ProjectivePoint as GroupElement>::ScalarType>","fastcrypto_tbls::threshold_schnorr::G"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CScalar%3E-for-ProjectivePoint\" class=\"impl\"><a href=\"#impl-Mul%3CScalar%3E-for-ProjectivePoint\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Scalar&gt; for ProjectivePoint</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = ProjectivePoint</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: Scalar) -&gt; ProjectivePoint</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Scalar>","fastcrypto_tbls::threshold_schnorr::G"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3C%26%3CProjectivePoint+as+GroupElement%3E::ScalarType%3E-for-ProjectivePoint\" class=\"impl\"><a href=\"#impl-MulAssign%3C%26%3CProjectivePoint+as+GroupElement%3E::ScalarType%3E-for-ProjectivePoint\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;&amp;&lt;ProjectivePoint as GroupElement&gt;::ScalarType&gt; for ProjectivePoint</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: &amp;&lt;ProjectivePoint as GroupElement&gt;::ScalarType)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<&<ProjectivePoint as GroupElement>::ScalarType>","fastcrypto_tbls::threshold_schnorr::G"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3C%3CProjectivePoint+as+GroupElement%3E::ScalarType%3E-for-ProjectivePoint\" class=\"impl\"><a href=\"#impl-MulAssign%3C%3CProjectivePoint+as+GroupElement%3E::ScalarType%3E-for-ProjectivePoint\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;&lt;ProjectivePoint as GroupElement&gt;::ScalarType&gt; for ProjectivePoint</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: &lt;ProjectivePoint as GroupElement&gt;::ScalarType)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<<ProjectivePoint as GroupElement>::ScalarType>","fastcrypto_tbls::threshold_schnorr::G"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiScalarMul-for-ProjectivePoint\" class=\"impl\"><a href=\"#impl-MultiScalarMul-for-ProjectivePoint\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MultiScalarMul for ProjectivePoint</h3></section></summary><div class=\"impl-items\"><section id=\"method.multi_scalar_mul\" class=\"method trait-impl\"><a href=\"#method.multi_scalar_mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multi_scalar_mul</a>(\n    scalars: &amp;[&lt;ProjectivePoint as GroupElement&gt;::ScalarType],\n    points: &amp;[ProjectivePoint],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;ProjectivePoint, FastCryptoError&gt;</h4></section></div></details>","MultiScalarMul","fastcrypto_tbls::threshold_schnorr::G"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-ProjectivePoint\" class=\"impl\"><a href=\"#impl-Neg-for-ProjectivePoint\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for ProjectivePoint</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = ProjectivePoint</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; ProjectivePoint</h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","fastcrypto_tbls::threshold_schnorr::G"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-ProjectivePoint\" class=\"impl\"><a href=\"#impl-PartialEq-for-ProjectivePoint\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for ProjectivePoint</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;ProjectivePoint) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","fastcrypto_tbls::threshold_schnorr::G"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ProjectivePoint\" class=\"impl\"><a href=\"#impl-ProjectivePoint\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ProjectivePoint</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.x_as_be_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">x_as_be_bytes</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">32</a>], FastCryptoError&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the x-coordinate of this point as a big-endian byte array.\nReturns an <code>InvalidInput</code> error if this is the identity point.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_even_y_from_x_be_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">with_even_y_from_x_be_bytes</a>(\n    x: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">32</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;ProjectivePoint, FastCryptoError&gt;</h4></section></summary><div class=\"docblock\"><p>Lift an x-coordinate to a point on the curve with an even y-coordinate.\nReturns an error if x is not the x-coordinate of a point on the curve.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_even_y\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">has_even_y</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, FastCryptoError&gt;</h4></section></summary><div class=\"docblock\"><p>Returns true iff the y-coordinate of this point is even.\nReturns an <code>InvalidInput</code> error if this is the identity point.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true iff this is the identity point aka the point at infinity.</p>\n</div></details></div></details>",0,"fastcrypto_tbls::threshold_schnorr::G"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-ProjectivePoint\" class=\"impl\"><a href=\"#impl-Serialize-for-ProjectivePoint\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.223/serde_core/ser/trait.Serialize.html\" title=\"trait serde_core::ser::Serialize\">Serialize</a> for ProjectivePoint</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde_core/1.0.223/serde_core/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.223/serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde_core/1.0.223/serde_core/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde_core::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.223/serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde_core/1.0.223/serde_core/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde_core::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.223/serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde_core/1.0.223/serde_core/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","fastcrypto_tbls::threshold_schnorr::G"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3C%26ProjectivePoint%3E-for-ProjectivePoint\" class=\"impl\"><a href=\"#impl-Sub%3C%26ProjectivePoint%3E-for-ProjectivePoint\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;ProjectivePoint&gt; for ProjectivePoint</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = ProjectivePoint</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(\n    self,\n    rhs: &amp;ProjectivePoint,\n) -&gt; &lt;ProjectivePoint as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;ProjectivePoint&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<&ProjectivePoint>","fastcrypto_tbls::threshold_schnorr::G"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-ProjectivePoint\" class=\"impl\"><a href=\"#impl-Sub-for-ProjectivePoint\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for ProjectivePoint</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = ProjectivePoint</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: ProjectivePoint) -&gt; ProjectivePoint</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","fastcrypto_tbls::threshold_schnorr::G"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3C%26ProjectivePoint%3E-for-ProjectivePoint\" class=\"impl\"><a href=\"#impl-SubAssign%3C%26ProjectivePoint%3E-for-ProjectivePoint\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;&amp;ProjectivePoint&gt; for ProjectivePoint</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: &amp;ProjectivePoint)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<&ProjectivePoint>","fastcrypto_tbls::threshold_schnorr::G"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-ProjectivePoint\" class=\"impl\"><a href=\"#impl-SubAssign-for-ProjectivePoint\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for ProjectivePoint</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: ProjectivePoint)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","fastcrypto_tbls::threshold_schnorr::G"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToFromByteArray%3Cfastcrypto::::groups::secp256k1::%7Bimpl%235%7D::%7Bconstant%230%7D%3E-for-ProjectivePoint\" class=\"impl\"><a href=\"#impl-ToFromByteArray%3Cfastcrypto::::groups::secp256k1::%7Bimpl%235%7D::%7Bconstant%230%7D%3E-for-ProjectivePoint\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ToFromByteArray&lt;fastcrypto::::groups::secp256k1::{impl#5}::{constant#0}&gt; for ProjectivePoint</h3></section></summary><div class=\"impl-items\"><section id=\"method.from_byte_array\" class=\"method trait-impl\"><a href=\"#method.from_byte_array\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_byte_array</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">33</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;ProjectivePoint, FastCryptoError&gt;</h4></section><section id=\"method.to_byte_array\" class=\"method trait-impl\"><a href=\"#method.to_byte_array\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_byte_array</a>(&amp;self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">33</a>]</h4></section><section id=\"associatedconstant.BYTE_LENGTH\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.BYTE_LENGTH\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">BYTE_LENGTH</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a> = LENGTH</h4></section></div></details>","ToFromByteArray<fastcrypto::::groups::secp256k1::{impl#5}::{constant#0}>","fastcrypto_tbls::threshold_schnorr::G"],["<section id=\"impl-Copy-for-ProjectivePoint\" class=\"impl\"><a href=\"#impl-Copy-for-ProjectivePoint\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for ProjectivePoint</h3></section>","Copy","fastcrypto_tbls::threshold_schnorr::G"],["<section id=\"impl-Eq-for-ProjectivePoint\" class=\"impl\"><a href=\"#impl-Eq-for-ProjectivePoint\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for ProjectivePoint</h3></section>","Eq","fastcrypto_tbls::threshold_schnorr::G"],["<section id=\"impl-StructuralPartialEq-for-ProjectivePoint\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-ProjectivePoint\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for ProjectivePoint</h3></section>","StructuralPartialEq","fastcrypto_tbls::threshold_schnorr::G"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[43327]}